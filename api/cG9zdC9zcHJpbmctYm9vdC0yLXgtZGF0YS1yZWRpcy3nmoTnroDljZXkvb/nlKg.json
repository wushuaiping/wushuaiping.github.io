{"title":"spring boot 2.x data redis 的简单使用","date":"2018-11-23T08:32:58.000Z","slug":"spring-boot-2-x-data-redis-的简单使用","comments":true,"tags":["Spring Boot"],"updated":"2019-05-11T17:05:04.335Z","content":"<ul>\n<li>需要使用到的pom包</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>当然肯定你是默认使用的Spring boot 2.x项目</p>\n<ul>\n<li>配置</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  datasource:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">localhost</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>在项目中使用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Class RedisTemplate extends redisTemlate&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 缓存</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Article <span class=\"title\">getById</span><span class=\"params\">(String id)</span> </span>&#123;</span><br><span class=\"line\">        Article article = (Article)</span><br><span class=\"line\">        <span class=\"comment\">// 获取缓存</span></span><br><span class=\"line\">        redisTemplate.opsForValue().get(ARTICLE_KEY + id);</span><br><span class=\"line\">        <span class=\"comment\">// 没有缓存就重新设置一个</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (article == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            article = articleRepository.getOne(id);</span><br><span class=\"line\">            redisTemplate.opsForValue().set(ARTICLE_KEY + id, article);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> article;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleted</span><span class=\"params\">(String id)</span> </span>&#123;</span><br><span class=\"line\">        redisTemplate.delete(ARTICLE_KEY + id);</span><br><span class=\"line\">        articleRepository.deleteById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>除此之外如果想设置过期时间:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(K key, V value, <span class=\"keyword\">long</span> timeout, TimeUnit unit)</span></span></span><br></pre></td></tr></table></figure>\n<p><code>timeout</code>  超时时间。</p>\n<p><code>unit</code>  时间单位。</p>\n<p>有如下几个单位:</p>\n<ul>\n<li>NANOSECONDS: 千分之一微妙的时间单位</li>\n<li>MICROSECONDS: 千分之一毫秒的时间单位</li>\n<li>MILLISECONDS: 千分之一秒的时间单位</li>\n<li>SECONDS: 秒的时间单位</li>\n<li>MINUTES: 分的时间单位</li>\n<li>HOURS：小时的时间单位</li>\n<li>DAYS：天的时间单位</li>\n</ul>\n","prev":{"title":"ElasticSearch的RestApi使用","slug":"ElasticSearch的RestApi使用"},"next":{"title":"记一次docker安装elasticsearch遇到的坑","slug":"记一次docker安装elasticsearch及遇到的坑"},"link":"http://wooo.io/post/spring-boot-2-x-data-redis-的简单使用/"}